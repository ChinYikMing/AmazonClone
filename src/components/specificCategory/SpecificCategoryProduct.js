import React from 'react'
import { Typography } from '@material-ui/core'
import { Button } from '@material-ui/core'
import { makeStyles } from '@material-ui/core'
import orange from '@material-ui/core/colors/orange'
import { addToCart, removeFromCart } from '../../redux'
import { connect } from 'react-redux'
import { useLocation, Redirect } from 'react-router-dom'

const useStyle = makeStyles({
    buttonStyle: {
        backgroundColor: orange[500],
        '&:hover': {
            backgroundColor: orange[300]
        }
    },
    titleStyle: {
        display: 'block'
    }
})

function SpecificCategoryProduct(props) {
    const classes = useStyle();
    const location = useLocation();
    const auth = props.auth;
    const { itemId, imgSrc, title, producer, shipDestination, price } = props;
    const star = props.children;

    const addToCart = props.addToCart;
    const removeFromCart = props.removeFromCart;

    // The itemId is auto generated by firestore, used for deleting item

    const item = {
        itemId,
        imgSrc,
        title,
        producer,
        shipDestination,
        price
    };

    if (!auth.uid)
        return <Redirect to='/signin' />

    return (
        <div className="specific-product">
            <img src={imgSrc} alt="product" />
            <Typography className={classes.titleStyle} variant="title" gutterBottom>
                {title}
            </Typography>
            <Typography variant="subtitle2" gutterBottom>
                by {producer}
            </Typography>
            <Typography variant="subtitle2">
                Ships to {shipDestination}
            </Typography>
            <span>${price}</span>
            <div className="star-list">
                <ul>
                    <li>{star}</li>
                    <li>{star}</li>
                    <li>{star}</li>
                    <li>{star}</li>
                    <li>{star}</li>
                </ul>
            </div>
            {location.pathname === '/cart' ? (
                <Button
                    variant="inlined"
                    className={classes.buttonStyle}
                    onClick={() => removeFromCart(itemId)}
                >
                    Remove from cart
                </Button>
            ) : (
                    <Button
                        variant="inlined"
                        className={classes.buttonStyle}
                        onClick={() => addToCart(item)}
                    >
                        Add to cart
                    </Button>
                )}

        </div>
    )
}

const mapStateToProps = state => {
    return {
        auth: state.firebase.auth
    }
}

const mapDispatchToProps = dispatch => {
    return {
        addToCart: (item) => dispatch(addToCart(item)),
        removeFromCart: (itemId) => dispatch(removeFromCart(itemId))
    }
}


export default connect(mapStateToProps, mapDispatchToProps)(SpecificCategoryProduct)
